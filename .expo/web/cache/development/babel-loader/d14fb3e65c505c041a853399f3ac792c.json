{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Task from \"./components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPressPriorityHigh = _useState6[0],\n      setIsPressPriorityHigh = _useState6[1];\n\n  var touchProps = {\n    activeOpacity: 1,\n    underlayColor: 'blue',\n    style: isPress ? styles.btnPress : styles.btnNormal,\n    onHideUnderlay: function onHideUnderlay() {\n      return setIsPress(false);\n    },\n    onShowUnderlay: function onShowUnderlay() {\n      return setIsPress(true);\n    },\n    onPress: function onPress() {\n      return console.log('HELLO');\n    }\n  };\n\n  var handleAddTask = function handleAddTask() {\n    if (task != null && task != \"\") setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.taskWrapper,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Today's Tasks\"\n      }), _jsx(View, {\n        style: styles.items,\n        children: taskItems.map(function (item, index) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return completeTask(index);\n            },\n            children: _jsx(Task, {\n              text: item\n            })\n          });\n        })\n      })]\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Write a Task Here\",\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsxs(View, {\n        style: styles.priorities,\n        children: [_jsx(TouchableHighlight, _objectSpread({}, touchProps)), _jsx(TouchableOpacity, {\n          style: styles.squareMedium\n        }), _jsx(TouchableOpacity, {\n          style: styles.squareLow\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED'\n  },\n  taskWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 20\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    width: '75%',\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    marginLeft: 15\n  },\n  addWrapper: {\n    width: 50,\n    height: 50,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    marginRight: 15\n  },\n  picker: {\n    width: 100,\n    height: 50,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  priorities: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  squareHigh: {\n    width: 24,\n    height: 24,\n    backgroundColor: '#F555F5',\n    opacity: 0.4,\n    borderRadius: 5,\n    marginRight: 10\n  },\n  squareMedium: {\n    width: 24,\n    height: 24,\n    backgroundColor: '#BCF555',\n    opacity: 0.4,\n    borderRadius: 5,\n    marginRight: 10\n  },\n  squareLow: {\n    width: 24,\n    height: 24,\n    backgroundColor: '#55BCF6',\n    opacity: 0.4,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["/Users/gabrielmartini/Documents/Estudos-Dev/React-Native/TaskList-ReactNative/App.js"],"names":["StatusBar","React","useState","Task","App","task","setTask","taskItems","setTaskItems","isPressPriorityHigh","setIsPressPriorityHigh","touchProps","activeOpacity","underlayColor","style","isPress","styles","btnPress","btnNormal","onHideUnderlay","setIsPress","onShowUnderlay","onPress","console","log","handleAddTask","completeTask","index","itemsCopy","splice","container","taskWrapper","sectionTitle","items","map","item","Platform","OS","writeTaskWrapper","input","text","priorities","squareMedium","squareLow","addWrapper","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","marginLeft","height","marginRight","picker","squareHigh","opacity"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Keyboard, Platform, StyleSheet, Text, View } from 'react-native';\nimport { KeyboardAvoidingView, TextInput, TouchableOpacity, TouchableHighlight } from 'react-native-web';\nimport Task from './components/Task';\n\nexport default function App() {\n\n  const [task, setTask] = useState();\n  const [taskItems, setTaskItems] = useState([]);\n\n  const [isPressPriorityHigh, setIsPressPriorityHigh] = useState(false);\n    var touchProps = {\n      activeOpacity: 1,\n    underlayColor: 'blue',                               // <-- \"backgroundColor\" will be always overwritten by \"underlayColor\"\n    style: isPress ? styles.btnPress : styles.btnNormal, // <-- but you can still apply other style changes\n    onHideUnderlay: () => setIsPress(false),\n    onShowUnderlay: () => setIsPress(true),\n    onPress: () => console.log('HELLO'),    \n    }\n\n  const handleAddTask = () => {\n    if (task != null && task != \"\")\n      setTaskItems([...taskItems, task])\n  }\n\n  const completeTask = (index) => {\n    let itemsCopy = [...taskItems];\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.taskWrapper}>\n        <Text style={styles.sectionTitle}>Today's Tasks</Text>\n\n        <View style={styles.items}>\n          {taskItems.map((item, index) => {\n            return (\n              <TouchableOpacity onPress={() => completeTask(index)} >\n                <Task text={item} />\n              </TouchableOpacity>\n            )\n          })}\n        </View>\n      </View>\n\n      <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.writeTaskWrapper} >\n        <TextInput style={styles.input} placeholder={\"Write a Task Here\"} value={task} onChangeText={text => setTask(text)} />\n        <View style={styles.priorities} >\n          <TouchableHighlight {...touchProps} />\n          <TouchableOpacity style={styles.squareMedium} />\n          <TouchableOpacity style={styles.squareLow} />\n        </View>\n        <TouchableOpacity onPress={() => handleAddTask()}>\n          <View style={styles.addWrapper}>\n            <Text>+</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED',\n  },\n  taskWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20,\n\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n\n  },\n  items: {\n    marginTop: 20,\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n\n  },\n  input: {\n    paddingVertical: 15,\n    width: '75%',\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    marginLeft: 15,\n  },\n  addWrapper: {\n    width: 50,\n    height: 50,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    marginRight: 15,\n  },\n  picker: {\n    width: 100,\n    height: 50,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  priorities: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  squareHigh: {\n    width: 24,\n    height: 24,\n    backgroundColor: '#F555F5',\n    opacity: 0.4,\n    borderRadius: 5,\n    marginRight: 10,\n},\nsquareMedium: {\n  width: 24,\n  height: 24,\n  backgroundColor: '#BCF555',\n  opacity: 0.4,\n  borderRadius: 5,\n  marginRight: 10,\n},\nsquareLow: {\n  width: 24,\n  height: 24,\n  backgroundColor: '#55BCF6',\n  opacity: 0.4,\n  borderRadius: 5,\n},\n});\n"]},"metadata":{},"sourceType":"module"}