{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Task from \"./components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    if (task != null && task != \"\") setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.taskWrapper,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Today's Tasks\"\n      }), _jsx(View, {\n        style: styles.items,\n        children: taskItems.map(function (item, index) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return completeTask(index);\n            },\n            children: _jsx(Task, {\n              text: item\n            })\n          });\n        })\n      })]\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Write a Task Here\",\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(View, {\n          children: _jsxs(Picker, {\n            style: styles.picker,\n            children: [_jsx(Picker.Item, {\n              label: \"Java\",\n              value: \"java\"\n            }), _jsx(Picker.Item, {\n              label: \"JavaScript\",\n              value: \"js\"\n            })]\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED'\n  },\n  taskWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 20\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    width: '75%',\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  addWrapper: {\n    width: 50,\n    height: 50,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  picker: {\n    marginStart: 10,\n    width: 80,\n    height: 50,\n    paddingVertical: 15,\n    width: '90%',\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/gabrielmartini/Documents/Estudos-Dev/React-Native/TaskList-ReactNative/App.js"],"names":["StatusBar","React","useState","Task","App","task","setTask","taskItems","setTaskItems","handleAddTask","completeTask","index","itemsCopy","splice","styles","container","taskWrapper","sectionTitle","items","map","item","Platform","OS","writeTaskWrapper","input","text","picker","addWrapper","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","height","marginStart"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Keyboard, Platform, StyleSheet, Text, View } from 'react-native';\nimport { KeyboardAvoidingView, TextInput, TouchableOpacity, Picker } from 'react-native-web';\nimport Task from './components/Task';\n\nexport default function App() {\n\n  const [task, setTask] = useState();\n  const [taskItems, setTaskItems] = useState([]);\n\n  const handleAddTask = () => {\n    if (task != null && task != \"\")\n      setTaskItems([...taskItems, task])\n  }\n\n  const completeTask = (index) => {\n    let itemsCopy = [...taskItems];\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.taskWrapper}>\n        <Text style={styles.sectionTitle}>Today's Tasks</Text>\n\n        <View style={styles.items}>\n          {taskItems.map((item, index) => {\n            return (\n              <TouchableOpacity onPress={() => completeTask(index)} >\n                <Task text={item} />\n\n              </TouchableOpacity>\n\n            )\n          })}\n        </View>\n      </View>\n\n      <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.writeTaskWrapper} >\n        <TextInput style={styles.input} placeholder={\"Write a Task Here\"} value={task} onChangeText={text => setTask(text)} />\n        <TouchableOpacity >\n          <View>\n            <Picker\n              style={styles.picker}\n            >\n              <Picker.Item label=\"Java\" value=\"java\" />\n              <Picker.Item label=\"JavaScript\" value=\"js\" />\n            </Picker>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => handleAddTask()}>\n          <View style={styles.addWrapper}>\n            <Text>+</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED',\n  },\n  taskWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20,\n\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n\n  },\n  items: {\n    marginTop: 20,\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n\n  },\n  input: {\n    paddingVertical: 15,\n    width: '75%',\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n  },\n  addWrapper: {\n    width:50,\n    height: 50,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n  },\n  picker: {\n    marginStart: 10,\n    width: 80,\n    height: 50,\n    paddingVertical: 15,\n    width: '90%',\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}